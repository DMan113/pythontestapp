- name: Run tests
  run: |
    python -m pytest -v


name: Sonar
on:
  workflow_dispatch:
  push:
    branches:
      - main # the name of your main branch
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Analysis
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Cache SonarQube packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache Maven packages
        uses: actions/cache@v1
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2
      - name: Set SonarQube properties
        run: |
          echo "sonar.projectKey=com.example:pythontestapp" >> sonar.properties
          echo "sonar.projectName=Pythontestapp" >> sonar.properties
          echo "sonar.projectVersion=1.0-SNAPSHOT" >> sonar.properties
          echo "sonar.language=python" >> sonar.properties
          echo "sonar.sourceEncoding=UTF-8" >> sonar.properties
          echo "sonar.python.pythonVersion=3.9.5" >> sonar.properties
          echo "sonar.python.pythonAnalyzerVersion=2.0-SNAPSHOT" >> sonar.properties
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: mvn -B verify sonar:sonar -Dmaven.test.failure.ignore=true